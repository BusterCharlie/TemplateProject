import json
import os

class ConfigManager:
    def __init__(self, config_file="config.json"):
        self.config_file = config_file
        self.default_settings = {
            "theme": "superhero",  # A good default dark theme from ttkbootstrap
            "mode": "dark"
        }

    def load_settings(self):
        """Load settings from config file, or return defaults if it doesn't exist."""
        if not os.path.exists(self.config_file):
            return self.default_settings.copy()
        try:
            with open(self.config_file, "r") as f:
                settings = json.load(f)
                # Ensure all default keys are present
                for key, value in self.default_settings.items():
                    settings.setdefault(key, value)
                return settings
        except (json.JSONDecodeError, IOError):
            return self.default_settings.copy()

    def save_settings(self, settings):
        """Saves the given settings dictionary to the config file."""
        try:
            with open(self.config_file, "w") as f:
                json.dump(settings, f, indent=4)
        except IOError as e:
            print(f"Error saving settings: {e}")
